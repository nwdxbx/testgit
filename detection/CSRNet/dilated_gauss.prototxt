# Enter your network definition here.
# Use Shift+Enter to update the visualization.
# Enter your network definition here.
# Use Shift+Enter to update the visualization.
name: "Muti_Net"
layer {
  name: "PythonLayer"
  type: "Python"
  top: "img"
  top: "den"
  include {
    phase:TRAIN
  }
  python_param {
    module: "pythonlayer"
    layer:  "Data_Layer_train"
  }
}
layer {
  name: "PythonLayer"
  type: "Python"
  top: "img"
  top: "den"
  include {
    phase:TEST
  }
  python_param {
    module: "pythonlayer"
    layer:  "Data_Layer_train"
  }
}
layer {
  bottom: "img"
  top: "conv1_1"
  name: "conv1_1"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}

layer {
  bottom: "conv4_3"
  top: "c1_conv11"
  name: "c1_conv11"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    dilation: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    
  }
}

layer {
  bottom: "c1_conv11"
  top: "c1_conv11"
  name: "c1_relu11"
  type: "ReLU"
}

layer {
  bottom: "c1_conv11"
  top: "c1_conv12"
  name: "c1_conv12"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    dilation: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    
  }
}

layer {
  bottom: "c1_conv12"
  top: "c1_conv12"
  name: "c1_relu12"
  type: "ReLU"
}




layer {
  bottom: "c1_conv12"
  top: "c1_conv13"
  name: "c1_conv13"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    dilation: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    
  }
}

layer {
  bottom: "c1_conv13"
  top: "c1_conv13"
  name: "c1_relu13"
  type: "ReLU"
}


layer {
  bottom: "c1_conv13"
  top: "c1_conv14"
  name: "c1_conv14"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    dilation: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    
  }
}

layer {
  bottom: "c1_conv14"
  top: "c1_conv14"
  name: "c1_relu14"
  type: "ReLU"
}


layer {
  bottom: "c1_conv14"
  top: "c1_conv15"
  name: "c1_conv15"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    dilation: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    
  }
}

layer {
  bottom: "c1_conv15"
  top: "c1_conv15"
  name: "c1_relu15"
  type: "ReLU"
}

layer {
  bottom: "c1_conv15"
  top: "c1_conv16"
  name: "c1_conv16"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    dilation: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    
  }
}

layer {
  bottom: "c1_conv16"
  top: "c1_conv16"
  name: "c1_relu16"
  type: "ReLU"
}
layer {
  bottom: "c1_conv16"
  top: "c1_conv_f"
  name: "c1_conv_f"
  param{
  lr_mult:1
  decay_mult:1
  }
  param{
  lr_mult:2
  decay_mult:0
  }
  type: "Convolution"
  convolution_param {
    num_output: 1
    pad: 0
    kernel_size: 1
    dilation: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    
  }
}

layer {
  bottom: "c1_conv_f"
  top: "c1_conv_f"
  name: "c1_relu_f"
  type: "ReLU"
}




layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "den"
  bottom: "c1_conv_f"
  top: "loss"
}




