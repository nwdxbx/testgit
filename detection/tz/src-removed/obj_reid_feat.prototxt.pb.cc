// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: obj_reid_feat.prototxt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "obj_reid_feat.prototxt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* face_feat_entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  face_feat_entry_reflection_ = NULL;
const ::google::protobuf::Descriptor* human_feat_entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  human_feat_entry_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_obj_5freid_5ffeat_2eprototxt() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_obj_5freid_5ffeat_2eprototxt() {
  protobuf_AddDesc_obj_5freid_5ffeat_2eprototxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "obj_reid_feat.prototxt");
  GOOGLE_CHECK(file != NULL);
  face_feat_entry_descriptor_ = file->message_type(0);
  static const int face_feat_entry_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(face_feat_entry, reid_face_feat_),
  };
  face_feat_entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      face_feat_entry_descriptor_,
      face_feat_entry::internal_default_instance(),
      face_feat_entry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(face_feat_entry, _has_bits_),
      -1,
      -1,
      sizeof(face_feat_entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(face_feat_entry, _internal_metadata_));
  human_feat_entry_descriptor_ = file->message_type(1);
  static const int human_feat_entry_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(human_feat_entry, reid_feat_),
  };
  human_feat_entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      human_feat_entry_descriptor_,
      human_feat_entry::internal_default_instance(),
      human_feat_entry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(human_feat_entry, _has_bits_),
      -1,
      -1,
      sizeof(human_feat_entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(human_feat_entry, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_obj_5freid_5ffeat_2eprototxt);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      face_feat_entry_descriptor_, face_feat_entry::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      human_feat_entry_descriptor_, human_feat_entry::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_obj_5freid_5ffeat_2eprototxt() {
  face_feat_entry_default_instance_.Shutdown();
  delete face_feat_entry_reflection_;
  human_feat_entry_default_instance_.Shutdown();
  delete human_feat_entry_reflection_;
}

void protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  face_feat_entry_default_instance_.DefaultConstruct();
  human_feat_entry_default_instance_.DefaultConstruct();
  face_feat_entry_default_instance_.get_mutable()->InitAsDefaultInstance();
  human_feat_entry_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt_once_);
void protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt_once_,
                 &protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt_impl);
}
void protobuf_AddDesc_obj_5freid_5ffeat_2eprototxt_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026obj_reid_feat.prototxt\")\n\017face_feat_en"
    "try\022\026\n\016reid_face_feat\030\001 \003(\002\"%\n\020human_fea"
    "t_entry\022\021\n\treid_feat\030\001 \003(\002", 106);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "obj_reid_feat.prototxt", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_obj_5freid_5ffeat_2eprototxt);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_obj_5freid_5ffeat_2eprototxt_once_);
void protobuf_AddDesc_obj_5freid_5ffeat_2eprototxt() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_obj_5freid_5ffeat_2eprototxt_once_,
                 &protobuf_AddDesc_obj_5freid_5ffeat_2eprototxt_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_obj_5freid_5ffeat_2eprototxt {
  StaticDescriptorInitializer_obj_5freid_5ffeat_2eprototxt() {
    protobuf_AddDesc_obj_5freid_5ffeat_2eprototxt();
  }
} static_descriptor_initializer_obj_5freid_5ffeat_2eprototxt_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int face_feat_entry::kReidFaceFeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

face_feat_entry::face_feat_entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt();
  SharedCtor();
  // @@protoc_insertion_point(constructor:face_feat_entry)
}

void face_feat_entry::InitAsDefaultInstance() {
}

face_feat_entry::face_feat_entry(const face_feat_entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:face_feat_entry)
}

void face_feat_entry::SharedCtor() {
  _cached_size_ = 0;
}

face_feat_entry::~face_feat_entry() {
  // @@protoc_insertion_point(destructor:face_feat_entry)
  SharedDtor();
}

void face_feat_entry::SharedDtor() {
}

void face_feat_entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* face_feat_entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return face_feat_entry_descriptor_;
}

const face_feat_entry& face_feat_entry::default_instance() {
  protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<face_feat_entry> face_feat_entry_default_instance_;

face_feat_entry* face_feat_entry::New(::google::protobuf::Arena* arena) const {
  face_feat_entry* n = new face_feat_entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void face_feat_entry::Clear() {
// @@protoc_insertion_point(message_clear_start:face_feat_entry)
  reid_face_feat_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool face_feat_entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:face_feat_entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float reid_face_feat = 1;
      case 1: {
        if (tag == 13) {
         parse_reid_face_feat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_reid_face_feat())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_reid_face_feat())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_reid_face_feat;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:face_feat_entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:face_feat_entry)
  return false;
#undef DO_
}

void face_feat_entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:face_feat_entry)
  // repeated float reid_face_feat = 1;
  for (int i = 0; i < this->reid_face_feat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->reid_face_feat(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:face_feat_entry)
}

::google::protobuf::uint8* face_feat_entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:face_feat_entry)
  // repeated float reid_face_feat = 1;
  for (int i = 0; i < this->reid_face_feat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->reid_face_feat(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:face_feat_entry)
  return target;
}

size_t face_feat_entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:face_feat_entry)
  size_t total_size = 0;

  // repeated float reid_face_feat = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->reid_face_feat_size();
    data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->reid_face_feat_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void face_feat_entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:face_feat_entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const face_feat_entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const face_feat_entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:face_feat_entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:face_feat_entry)
    UnsafeMergeFrom(*source);
  }
}

void face_feat_entry::MergeFrom(const face_feat_entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:face_feat_entry)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void face_feat_entry::UnsafeMergeFrom(const face_feat_entry& from) {
  GOOGLE_DCHECK(&from != this);
  reid_face_feat_.UnsafeMergeFrom(from.reid_face_feat_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void face_feat_entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:face_feat_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void face_feat_entry::CopyFrom(const face_feat_entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:face_feat_entry)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool face_feat_entry::IsInitialized() const {

  return true;
}

void face_feat_entry::Swap(face_feat_entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void face_feat_entry::InternalSwap(face_feat_entry* other) {
  reid_face_feat_.UnsafeArenaSwap(&other->reid_face_feat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata face_feat_entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = face_feat_entry_descriptor_;
  metadata.reflection = face_feat_entry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// face_feat_entry

// repeated float reid_face_feat = 1;
int face_feat_entry::reid_face_feat_size() const {
  return reid_face_feat_.size();
}
void face_feat_entry::clear_reid_face_feat() {
  reid_face_feat_.Clear();
}
float face_feat_entry::reid_face_feat(int index) const {
  // @@protoc_insertion_point(field_get:face_feat_entry.reid_face_feat)
  return reid_face_feat_.Get(index);
}
void face_feat_entry::set_reid_face_feat(int index, float value) {
  reid_face_feat_.Set(index, value);
  // @@protoc_insertion_point(field_set:face_feat_entry.reid_face_feat)
}
void face_feat_entry::add_reid_face_feat(float value) {
  reid_face_feat_.Add(value);
  // @@protoc_insertion_point(field_add:face_feat_entry.reid_face_feat)
}
const ::google::protobuf::RepeatedField< float >&
face_feat_entry::reid_face_feat() const {
  // @@protoc_insertion_point(field_list:face_feat_entry.reid_face_feat)
  return reid_face_feat_;
}
::google::protobuf::RepeatedField< float >*
face_feat_entry::mutable_reid_face_feat() {
  // @@protoc_insertion_point(field_mutable_list:face_feat_entry.reid_face_feat)
  return &reid_face_feat_;
}

inline const face_feat_entry* face_feat_entry::internal_default_instance() {
  return &face_feat_entry_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int human_feat_entry::kReidFeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

human_feat_entry::human_feat_entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt();
  SharedCtor();
  // @@protoc_insertion_point(constructor:human_feat_entry)
}

void human_feat_entry::InitAsDefaultInstance() {
}

human_feat_entry::human_feat_entry(const human_feat_entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:human_feat_entry)
}

void human_feat_entry::SharedCtor() {
  _cached_size_ = 0;
}

human_feat_entry::~human_feat_entry() {
  // @@protoc_insertion_point(destructor:human_feat_entry)
  SharedDtor();
}

void human_feat_entry::SharedDtor() {
}

void human_feat_entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* human_feat_entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return human_feat_entry_descriptor_;
}

const human_feat_entry& human_feat_entry::default_instance() {
  protobuf_InitDefaults_obj_5freid_5ffeat_2eprototxt();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<human_feat_entry> human_feat_entry_default_instance_;

human_feat_entry* human_feat_entry::New(::google::protobuf::Arena* arena) const {
  human_feat_entry* n = new human_feat_entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void human_feat_entry::Clear() {
// @@protoc_insertion_point(message_clear_start:human_feat_entry)
  reid_feat_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool human_feat_entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:human_feat_entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float reid_feat = 1;
      case 1: {
        if (tag == 13) {
         parse_reid_feat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_reid_feat())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_reid_feat())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_reid_feat;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:human_feat_entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:human_feat_entry)
  return false;
#undef DO_
}

void human_feat_entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:human_feat_entry)
  // repeated float reid_feat = 1;
  for (int i = 0; i < this->reid_feat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->reid_feat(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:human_feat_entry)
}

::google::protobuf::uint8* human_feat_entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:human_feat_entry)
  // repeated float reid_feat = 1;
  for (int i = 0; i < this->reid_feat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->reid_feat(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:human_feat_entry)
  return target;
}

size_t human_feat_entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:human_feat_entry)
  size_t total_size = 0;

  // repeated float reid_feat = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->reid_feat_size();
    data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->reid_feat_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void human_feat_entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:human_feat_entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const human_feat_entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const human_feat_entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:human_feat_entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:human_feat_entry)
    UnsafeMergeFrom(*source);
  }
}

void human_feat_entry::MergeFrom(const human_feat_entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:human_feat_entry)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void human_feat_entry::UnsafeMergeFrom(const human_feat_entry& from) {
  GOOGLE_DCHECK(&from != this);
  reid_feat_.UnsafeMergeFrom(from.reid_feat_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void human_feat_entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:human_feat_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void human_feat_entry::CopyFrom(const human_feat_entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:human_feat_entry)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool human_feat_entry::IsInitialized() const {

  return true;
}

void human_feat_entry::Swap(human_feat_entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void human_feat_entry::InternalSwap(human_feat_entry* other) {
  reid_feat_.UnsafeArenaSwap(&other->reid_feat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata human_feat_entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = human_feat_entry_descriptor_;
  metadata.reflection = human_feat_entry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// human_feat_entry

// repeated float reid_feat = 1;
int human_feat_entry::reid_feat_size() const {
  return reid_feat_.size();
}
void human_feat_entry::clear_reid_feat() {
  reid_feat_.Clear();
}
float human_feat_entry::reid_feat(int index) const {
  // @@protoc_insertion_point(field_get:human_feat_entry.reid_feat)
  return reid_feat_.Get(index);
}
void human_feat_entry::set_reid_feat(int index, float value) {
  reid_feat_.Set(index, value);
  // @@protoc_insertion_point(field_set:human_feat_entry.reid_feat)
}
void human_feat_entry::add_reid_feat(float value) {
  reid_feat_.Add(value);
  // @@protoc_insertion_point(field_add:human_feat_entry.reid_feat)
}
const ::google::protobuf::RepeatedField< float >&
human_feat_entry::reid_feat() const {
  // @@protoc_insertion_point(field_list:human_feat_entry.reid_feat)
  return reid_feat_;
}
::google::protobuf::RepeatedField< float >*
human_feat_entry::mutable_reid_feat() {
  // @@protoc_insertion_point(field_mutable_list:human_feat_entry.reid_feat)
  return &reid_feat_;
}

inline const human_feat_entry* human_feat_entry::internal_default_instance() {
  return &human_feat_entry_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
