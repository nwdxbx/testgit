#name: "FaceBoxes"
layer {
  name: "PythonLayer"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: "pythonLayer"
    layer:  "data_layer"
  }
}


layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv1_1_bn"
  type: "BatchNorm"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_1_scale"
  type: "Scale"
  bottom: "conv1_1"
  top: "conv1_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}


layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv2_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 56
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv2_1_bn"
  type: "BatchNorm"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_1_scale"
  type: "Scale"
  bottom: "conv2_1"
  top: "conv2_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_1"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
  
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv3_1_bn"
  type: "BatchNorm"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_1_scale"
  type: "Scale"
  bottom: "conv3_1"
  top: "conv3_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}


layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_1"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
  
}

layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv4_3_bn"
  type: "BatchNorm"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "conv4_3_scale"
  type: "Scale"
  bottom: "conv4_3"
  top: "conv4_3"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}

layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "conv4_3"
  top: "conv6_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 256
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    pad: 1
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv6_2_bn"
  type: "BatchNorm"
  bottom: "conv6_2"
  top: "conv6_2"
}
layer {
  name: "conv6_2_scale"
  type: "Scale"
  bottom: "conv6_2"
  top: "conv6_2"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu6_2"
  type: "ReLU"
  bottom: "conv6_2"
  top: "conv6_2"
}



layer {
  name: "conv4_top_add"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv4_top_add"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 128
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    kernel_size: 1
    stride: 1
  }
}

layer {
  name: "conv4_top_add_bn"
  type: "BatchNorm"
  bottom: "conv4_top_add"
  top: "conv4_top_add"
}
layer {
  name: "conv4_top_add_scale"
  type: "Scale"
  bottom: "conv4_top_add"
  top: "conv4_top_add"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "conv4_top_add_relu"
  type: "ReLU"
  bottom: "conv4_top_add"
  top: "conv4_top_add"
}


layer {
  name: "conv4_top_add_up"
  type: "Deconvolution"
  bottom: "conv4_top_add"
  top: "conv4_top_add_up"
  convolution_param {
    kernel_size: 2
    stride: 2
    num_output: 128
  }
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
}

layer {
  name: "conv5_128_crop"
  type: "Crop"
  bottom: "conv4_top_add_up"
  bottom: "conv4_3"
  top: "conv4_3_crop"
  crop_param {
    axis: 2
    offset: 0
  }
}



layer {
  name: "conv4_fuse"
  type: "Eltwise"
  bottom: "conv4_3"
  bottom: "conv4_3_crop"
  top: "conv4_fuse"
  eltwise_param {
    operation: SUM
  }
}

layer {
  name: "conv4_fuse_relu"
  type: "ReLU"
  bottom: "conv4_fuse"
  top: "conv4_fuse"
}







layer {
  name: "Inception3/conv/loc1"
  type: "Convolution"
  bottom: "conv4_fuse"
  top: "Inception3/conv/loc1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "Inception3/conv/loc1/perm"
  type: "Permute"
  bottom: "Inception3/conv/loc1"
  top: "Inception3/conv/loc1/perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}

layer {
  name: "Inception3/conv/loc1/flat"
  type: "Flatten"
  bottom: "Inception3/conv/loc1/perm"
  top: "Inception3/conv/loc1/flat"
  flatten_param {
    axis: 1
  }
} 

layer {
  name: "Inception3/conv/conf1"
  type: "Convolution"
  bottom: "conv4_fuse"
  top: "Inception3/conv/conf1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "Inception3/conv/conf1/perm"
  type: "Permute"
  bottom: "Inception3/conv/conf1"
  top: "Inception3/conv/conf1/perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}

layer {
  name: "Inception3/conv/conf1/flat"
  type: "Flatten"
  bottom: "Inception3/conv/conf1/perm"
  top: "Inception3/conv/conf1/flat"
  flatten_param {
    axis: 1
  }
}

layer {
  name: "Inception3/conv/priorbox1"
  type: "PriorBox"
  bottom: "conv4_fuse"
  bottom: "data"
  top: "Inception3/conv/priorbox1"
  prior_box_param {
    min_size: 16
    min_size: 32
    aspect_ratio: 1
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}



layer {
  name: "conv6/loc"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6/loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv6/loc/perm"
  type: "Permute"
  bottom: "conv6/loc"
  top: "conv6/loc/perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}

layer {
  name: "conv6/loc/perm/flat"
  type: "Flatten"
  bottom: "conv6/loc/perm"
  top: "conv6/loc/perm/flat"
  flatten_param {
    axis: 1
  }
}

layer {
  name: "conv6/conf"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6/conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv6/conf/perm"
  type: "Permute"
  bottom: "conv6/conf"
  top: "conv6/conf/perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}

layer {
  name: "conv6/conf/perm/flat"
  type: "Flatten"
  bottom: "conv6/conf/perm"
  top: "conv6/conf/perm/flat"
  flatten_param {
    axis: 1
  }
}

layer {
  name: "conv6/priorbox"
  type: "PriorBox"
  bottom: "conv6_2"
  bottom: "data"
  top: "conv6/priorbox"
  prior_box_param {
  	min_size: 256
    min_size: 512
    aspect_ratio: 1
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}
























layer {
  name: "mbox_loc"
  type: "Concat"
  bottom: "Inception3/conv/loc1/flat"
  bottom: "conv6/loc/perm/flat"
  top: "mbox_loc"
  concat_param {
    axis: 1
  }
}

layer {
  name: "mbox_conf"
  type: "Concat"
  bottom: "Inception3/conv/conf1/flat"
  bottom: "conv6/conf/perm/flat"
  top: "mbox_conf"
  concat_param {
    axis: 1
  }
}

layer {
  name: "mbox_priorbox"
  type: "Concat"
  bottom: "Inception3/conv/priorbox1"
  bottom: "conv6/priorbox"
  top: "mbox_priorbox"
  concat_param {
    axis: 2
  }
}

layer {
  name: "mbox_loss"
  type: "MultiBoxLoss"
  bottom: "mbox_loc"
  bottom: "mbox_conf"
  bottom: "mbox_priorbox"
  bottom: "label"
  top: "mbox_loss"
  include {
    phase: TRAIN
  }
  propagate_down: true
  propagate_down: true
  propagate_down: false
  propagate_down: false
  loss_param {
    normalization: VALID
  }
  multibox_loss_param {
    loc_loss_type: SMOOTH_L1
    conf_loss_type: SOFTMAX
    loc_weight: 1.0
    num_classes: 2
    share_location: true
    match_type: PER_PREDICTION
    overlap_threshold: 0.5
    use_prior_for_matching: true
    background_label_id: 0
    use_difficult_gt: true
    neg_pos_ratio: 3.0
    neg_overlap: 0.5
    code_type: CENTER_SIZE
    ignore_cross_boundary_bbox: false
    mining_type: MAX_NEGATIVE
  }
}
